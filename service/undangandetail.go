package service

import (
	"undangan_online_api/entity"
	"undangan_online_api/input"
	"undangan_online_api/repository"
)

type UndanganDetailService interface {
	UndanganDetailServiceGetAll() ([]entity.UndanganDetail, error)
	UndanganDetailServiceGetByID(inputID input.InputIDUndanganDetail) (entity.UndanganDetail, error)
	UndanganDetailServiceGetByKode(kode string) ([]entity.UndanganDetail, error)
	UndanganDetailServiceCreate(input input.UndanganDetailInput) (entity.UndanganDetail, error)
	UndanganDetailServiceUpdate(inputID input.InputIDUndanganDetail, inputData input.UndanganDetailInput) (entity.UndanganDetail, error)
	UndanganDetailServiceDeleteByID(inputID input.InputIDUndanganDetail) (bool, error)
}
type undangandetailService struct {
	repository repository.UndanganDetailRepository
}

func NewUndanganDetailService(repository repository.UndanganDetailRepository) *undangandetailService {
	return &undangandetailService{repository}
}
func (s *undangandetailService) UndanganDetailServiceCreate(input input.UndanganDetailInput) (entity.UndanganDetail, error) {
	undangandetail := entity.UndanganDetail{}
	undangandetail.IdUndangan = input.IdUndangan
	undangandetail.NamaAcara = input.NamaAcara
	undangandetail.TanggalAcara = input.TanggalAcara
	undangandetail.WaktuAcara = input.WaktuAcara
	undangandetail.LokasiAcara = input.LokasiAcara
	undangandetail.AlamatAcara = input.AlamatAcara
	newUndanganDetail, err := s.repository.SaveUndanganDetail(undangandetail)
	if err != nil {
		return newUndanganDetail, err
	}
	return newUndanganDetail, nil
}
func (s *undangandetailService) UndanganDetailServiceUpdate(inputID input.InputIDUndanganDetail, inputData input.UndanganDetailInput) (entity.UndanganDetail, error) {
	undangandetail, err := s.repository.FindByIDUndanganDetail(inputID.ID)
	if err != nil {
		return undangandetail, err
	}
	undangandetail.IdUndangan = inputData.IdUndangan
	undangandetail.NamaAcara = inputData.NamaAcara
	undangandetail.TanggalAcara = inputData.TanggalAcara
	undangandetail.WaktuAcara = inputData.WaktuAcara
	undangandetail.LokasiAcara = inputData.LokasiAcara
	undangandetail.AlamatAcara = inputData.AlamatAcara

	updatedUndanganDetail, err := s.repository.UpdateUndanganDetail(undangandetail)

	if err != nil {
		return updatedUndanganDetail, err
	}
	return updatedUndanganDetail, nil
}
func (s *undangandetailService) UndanganDetailServiceGetByID(inputID input.InputIDUndanganDetail) (entity.UndanganDetail, error) {
	undangandetail, err := s.repository.FindByIDUndanganDetail(inputID.ID)
	if err != nil {
		return undangandetail, err
	}
	return undangandetail, nil
}
func (s *undangandetailService) UndanganDetailServiceGetByKode(kode string) ([]entity.UndanganDetail, error) {
	undangandetail, err := s.repository.FindByKodeUndanganDetail(kode)
	if err != nil {
		return undangandetail, err
	}
	return undangandetail, nil
}
func (s *undangandetailService) UndanganDetailServiceGetAll() ([]entity.UndanganDetail, error) {
	undangandetails, err := s.repository.FindAllUndanganDetail()
	if err != nil {
		return undangandetails, err
	}
	return undangandetails, nil
}
func (s *undangandetailService) UndanganDetailServiceDeleteByID(inputID input.InputIDUndanganDetail) (bool, error) {
	_, err := s.repository.FindByIDUndanganDetail(inputID.ID)
	if err != nil {
		return false, err
	}
	_, err = s.repository.DeleteByIDUndanganDetail(inputID.ID)
	if err != nil {
		return false, err
	}
	return true, nil
}

//Generated by Micagen at 05 Juli 2022
