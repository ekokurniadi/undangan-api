package service

import (
	"undangan_online_api/entity"
	"undangan_online_api/input"
	"undangan_online_api/repository"
)

type LoveStoryService interface {
	LoveStoryServiceGetAll(params string) ([]entity.LoveStory, error)
	LoveStoryServiceGetByID(inputID input.InputIDLoveStory) (entity.LoveStory, error)
	LoveStoryServiceCreate(input input.LoveStoryInput) (entity.LoveStory, error)
	LoveStoryServiceUpdate(inputID input.InputIDLoveStory, inputData input.LoveStoryInput) (entity.LoveStory, error)
	LoveStoryServiceDeleteByID(inputID input.InputIDLoveStory) (bool, error)
}
type lovestoryService struct {
	repository repository.LoveStoryRepository
}

func NewLoveStoryService(repository repository.LoveStoryRepository) *lovestoryService {
	return &lovestoryService{repository}
}
func (s *lovestoryService) LoveStoryServiceCreate(input input.LoveStoryInput) (entity.LoveStory, error) {
	lovestory := entity.LoveStory{}
	lovestory.IdUndangan = input.IdUndangan
	lovestory.Judul = input.Judul
	lovestory.Tanggal = input.Tanggal
	lovestory.Tempat = input.Tempat
	lovestory.Keterangan = input.Keterangan
	newLoveStory, err := s.repository.SaveLoveStory(lovestory)
	if err != nil {
		return newLoveStory, err
	}
	return newLoveStory, nil
}
func (s *lovestoryService) LoveStoryServiceUpdate(inputID input.InputIDLoveStory, inputData input.LoveStoryInput) (entity.LoveStory, error) {
	lovestory, err := s.repository.FindByIDLoveStory(inputID.ID)
	if err != nil {
		return lovestory, err
	}
	lovestory.IdUndangan = inputData.IdUndangan
	lovestory.Judul = inputData.Judul
	lovestory.Tanggal = inputData.Tanggal
	lovestory.Tempat = inputData.Tempat
	lovestory.Keterangan = inputData.Keterangan

	updatedLoveStory, err := s.repository.UpdateLoveStory(lovestory)

	if err != nil {
		return updatedLoveStory, err
	}
	return updatedLoveStory, nil
}
func (s *lovestoryService) LoveStoryServiceGetByID(inputID input.InputIDLoveStory) (entity.LoveStory, error) {
	lovestory, err := s.repository.FindByIDLoveStory(inputID.ID)
	if err != nil {
		return lovestory, err
	}
	return lovestory, nil
}
func (s *lovestoryService) LoveStoryServiceGetAll(params string) ([]entity.LoveStory, error) {
	lovestorys, err := s.repository.FindAllLoveStory(params)
	if err != nil {
		return lovestorys, err
	}
	return lovestorys, nil
}
func (s *lovestoryService) LoveStoryServiceDeleteByID(inputID input.InputIDLoveStory) (bool, error) {
	_, err := s.repository.FindByIDLoveStory(inputID.ID)
	if err != nil {
		return false, err
	}
	_, err = s.repository.DeleteByIDLoveStory(inputID.ID)
	if err != nil {
		return false, err
	}
	return true, nil
}

//Generated by Micagen at 05 Juli 2022
