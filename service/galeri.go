package service

import (
	"undangan_online_api/entity"
	"undangan_online_api/input"
	"undangan_online_api/repository"
)

type GaleriService interface {
	GaleriServiceGetAll(params string) ([]entity.Galeri, error)
	GaleriServiceGetByID(inputID input.InputIDGaleri) (entity.Galeri, error)
	GaleriServiceCreate(input input.GaleriInput) (entity.Galeri, error)
	GaleriServiceUpdate(inputID input.InputIDGaleri, inputData input.GaleriInput) (entity.Galeri, error)
	GaleriServiceDeleteByID(inputID input.InputIDGaleri) (bool, error)
}

type galeriService struct {
	repository repository.GaleriRepository
}

func NewGaleriService(repository repository.GaleriRepository) *galeriService {
	return &galeriService{repository}
}
func (s *galeriService) GaleriServiceCreate(input input.GaleriInput) (entity.Galeri, error) {
	galeri := entity.Galeri{}
	galeri.IdUndangan = input.IdUndangan
	galeri.Foto = input.Foto
	newGaleri, err := s.repository.SaveGaleri(galeri)
	if err != nil {
		return newGaleri, err
	}
	return newGaleri, nil
}
func (s *galeriService) GaleriServiceUpdate(inputID input.InputIDGaleri, inputData input.GaleriInput) (entity.Galeri, error) {
	galeri, err := s.repository.FindByIDGaleri(inputID.ID)
	if err != nil {
		return galeri, err
	}
	galeri.IdUndangan = inputData.IdUndangan
	galeri.Foto = inputData.Foto

	updatedGaleri, err := s.repository.UpdateGaleri(galeri)

	if err != nil {
		return updatedGaleri, err
	}
	return updatedGaleri, nil
}
func (s *galeriService) GaleriServiceGetByID(inputID input.InputIDGaleri) (entity.Galeri, error) {
	galeri, err := s.repository.FindByIDGaleri(inputID.ID)
	if err != nil {
		return galeri, err
	}
	return galeri, nil
}
func (s *galeriService) GaleriServiceGetAll(params string) ([]entity.Galeri, error) {
	galeris, err := s.repository.FindAllGaleri(params)
	if err != nil {
		return galeris, err
	}
	return galeris, nil
}
func (s *galeriService) GaleriServiceDeleteByID(inputID input.InputIDGaleri) (bool, error) {
	_, err := s.repository.FindByIDGaleri(inputID.ID)
	if err != nil {
		return false, err
	}
	_, err = s.repository.DeleteByIDGaleri(inputID.ID)
	if err != nil {
		return false, err
	}
	return true, nil
}

//Generated by Micagen at 05 Juli 2022
