package repository

import (
	"undangan_online_api/entity"

	"gorm.io/gorm"
)

type GuestBookRepository interface {
	SaveGuestBook(guestbook entity.GuestBook) (entity.GuestBook, error)
	UpdateGuestBook(guestbook entity.GuestBook) (entity.GuestBook, error)
	FindByIDGuestBook(ID int) (entity.GuestBook, error)
	FindAllGuestBook() ([]entity.GuestBook, error)
	DeleteByIDGuestBook(ID int) (entity.GuestBook, error)
}

type guestbookRepository struct {
	db *gorm.DB
}

func NewGuestBookRepository(db *gorm.DB) *guestbookRepository {
	return &guestbookRepository{db}
}

func (r *guestbookRepository) SaveGuestBook(guestbook entity.GuestBook) (entity.GuestBook, error) {
	err := r.db.Create(&guestbook).Error
	if err != nil {
		return guestbook, err
	}
	return guestbook, nil

}
func (r *guestbookRepository) FindByIDGuestBook(ID int) (entity.GuestBook, error) {
	var guestbook entity.GuestBook
	err := r.db.Where("id = ? ", ID).Find(&guestbook).Error
	if err != nil {
		return guestbook, err
	}
	return guestbook, nil

}
func (r *guestbookRepository) UpdateGuestBook(guestbook entity.GuestBook) (entity.GuestBook, error) {
	err := r.db.Save(&guestbook).Error
	if err != nil {
		return guestbook, err
	}
	return guestbook, nil

}
func (r *guestbookRepository) FindAllGuestBook() ([]entity.GuestBook, error) {
	var guestbooks []entity.GuestBook
	err := r.db.Find(&guestbooks).Error
	if err != nil {
		return guestbooks, err
	}
	return guestbooks, nil

}
func (r *guestbookRepository) DeleteByIDGuestBook(ID int) (entity.GuestBook, error) {
	var guestbook entity.GuestBook
	err := r.db.Where("id = ? ", ID).Delete(&guestbook).Error
	if err != nil {
		return guestbook, err
	}
	return guestbook, nil

}

//Generated by Micagen at 05 Juli 2022
