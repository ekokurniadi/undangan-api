package repository

import (
	"undangan_online_api/entity"

	"gorm.io/gorm"
)

type UndanganRepository interface {
	SaveUndangan(undangan entity.Undangan) (entity.Undangan, error)
	UpdateUndangan(undangan entity.Undangan) (entity.Undangan, error)
	FindByIDUndangan(ID int) (entity.Undangan, error)
	FindAllUndangan() ([]entity.Undangan, error)
	DeleteByIDUndangan(ID int) (entity.Undangan, error)
}

type undanganRepository struct {
	db *gorm.DB
}

func NewUndanganRepository(db *gorm.DB) *undanganRepository {
	return &undanganRepository{db}
}

func (r *undanganRepository) SaveUndangan(undangan entity.Undangan) (entity.Undangan, error) {
	err := r.db.Create(&undangan).Error
	if err != nil {
		return undangan, err
	}
	return undangan, nil

}
func (r *undanganRepository) FindByIDUndangan(ID int) (entity.Undangan, error) {
	var undangan entity.Undangan
	err := r.db.Where("id = ? ", ID).Find(&undangan).Error
	if err != nil {
		return undangan, err
	}
	return undangan, nil

}
func (r *undanganRepository) UpdateUndangan(undangan entity.Undangan) (entity.Undangan, error) {
	err := r.db.Save(&undangan).Error
	if err != nil {
		return undangan, err
	}
	return undangan, nil

}
func (r *undanganRepository) FindAllUndangan() ([]entity.Undangan, error) {
	var undangans []entity.Undangan
	err := r.db.Find(&undangans).Error
	if err != nil {
		return undangans, err
	}
	return undangans, nil

}
func (r *undanganRepository) DeleteByIDUndangan(ID int) (entity.Undangan, error) {
	var undangan entity.Undangan
	err := r.db.Where("id = ? ", ID).Delete(&undangan).Error
	if err != nil {
		return undangan, err
	}
	return undangan, nil

}

//Generated by Micagen at 05 Juli 2022
